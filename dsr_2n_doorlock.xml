<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="racepoint_component_profile.xsd" manufacturer="dsr_2n" model="doorlock" alias="2N Keypad, 2N Finger print" device_class="Door_lock_fixed" minimum_component_engine_version="9.1" rpm_xml_version="1.27" minimum_compatible_xml_version="1.16">
    <notes>
        
    </notes>
    
    <control_interfaces preferred="ip">
      <ip port="443" response_time_length_ms="8000" name_on_component="ETHERNET" protocol="https-insecure">
		<response_codes>
		  <rspcode message_name="200" status="success" type="character">200</rspcode>
		</response_codes>
        </ip>
    </control_interfaces>
    <media_interfaces>
        <data name_on_component="Ethernet">
            <combined_media>
                <data_media type="ethernet"/>
                <control port="443"/>
            </combined_media>
        </data>
        
       
        <internal name_on_component="Door Lock">
            <environmental_media></environmental_media>
            <resource resource_type="ENV_DOOR_LOCK_SOURCE"></resource>
        </internal>
        
    </media_interfaces>
    <state_variable_list>
        <state_variable name="relay1" owning_logical_component="Door_lock" state_center_binding="relay1" state_center_type="boolean" receive_updates_from_state_center="yes">0</state_variable>
        <state_variable name="relay2" owning_logical_component="Door_lock" state_center_binding="relay2" state_center_type="boolean" receive_updates_from_state_center="yes">0</state_variable>
        <state_variable name="output1" owning_logical_component="Door_lock" state_center_binding="output1" state_center_type="string" receive_updates_from_state_center="yes">0</state_variable>
        <state_variable name="output2" owning_logical_component="Door_lock" state_center_binding="output2" state_center_type="string" receive_updates_from_state_center="yes">0</state_variable>
        <state_variable name="input1" owning_logical_component="Door_lock" state_center_binding="input1" state_center_type="boolean" receive_updates_from_state_center="yes">0</state_variable>
        <state_variable name="switch_1" owning_logical_component="Door_lock" state_center_binding="switch_1" state_center_type="boolean" receive_updates_from_state_center="yes">0</state_variable>
        <state_variable name="switch_2" owning_logical_component="Door_lock" state_center_binding="switch_2" state_center_type="boolean" receive_updates_from_state_center="yes">0</state_variable>
        <state_variable name="switch_3" owning_logical_component="Door_lock" state_center_binding="switch_3" state_center_type="boolean" receive_updates_from_state_center="yes">0</state_variable>
        <state_variable name="switch_4" owning_logical_component="Door_lock" state_center_binding="switch_4" state_center_type="boolean" receive_updates_from_state_center="yes">0</state_variable>
        <state_variable name="DoorLockStatus_1" owning_logical_component="Door_lock" state_center_binding="DoorLockStatus_1" state_center_type="string" receive_updates_from_state_center="yes"></state_variable>
        <state_variable name="DoorLockStatus_2" owning_logical_component="Door_lock" state_center_binding="DoorLockStatus_2" state_center_type="string" receive_updates_from_state_center="yes"></state_variable>
        <state_variable name="DoorLockStatus_3" owning_logical_component="Door_lock" state_center_binding="DoorLockStatus_3" state_center_type="string" receive_updates_from_state_center="yes"></state_variable>
        <state_variable name="DoorLockStatus_4" owning_logical_component="Door_lock" state_center_binding="DoorLockStatus_4" state_center_type="string" receive_updates_from_state_center="yes"></state_variable>
        </state_variable_list>
    <logical_component logical_component_name="Door_lock">
        <implementation>
            <internal name_on_component="Door Lock"></internal>
        </implementation>
        
        <implementation>
            <internal name_on_component="Door Lock"></internal>
        </implementation>
        
        <!--<status_messages>
            
            <status_message name="IO_Status">
                <root_object name="none" matches_required="none" format="json">
                    <values path="//result/ports/port" matches_required="at_least_one">
                        <update state="portID" type="string"></update>
                        <append_identifier path="//result/ports/port" name="portID" note="portID"/>
                    </values>
                    <values path="//result/ports/state" matches_required="at_least_one">
                        <value_map match_required="yes">
                            <map key="1">
                                <update state="state" type="boolean">1</update>
                                <update state="DoorLockStatus" type="string">Unlocked</update>
                            </map>
                            <map key="0">
                                <update state="state" type="boolean">0</update>
                                <update state="DoorLockStatus" type="string">Locked</update>
                            </map>
                        </value_map>
                        <append_identifier path="//result/ports/port" name="portID" note="portID"/>
                    </values>
                </root_object>
            </status_message>
            <status_message name="Switch_Status">
                <root_object name="none" matches_required="none" format="json">
                    <values path="//result/switches/switch" matches_required="at_least_one">
                        <update state="switchID" type="string"></update>
                        <append_identifier path="//result/switches/switch" name="switchID" note="switchID"/>
                    </values>
                    <values path="//result/switches/active" matches_required="at_least_one">
                        <value_map match_required="yes">
                            <map key="1">
                                <update state="state" type="boolean">1</update>
                                <update state="switch" type="boolean">1</update>
                                <update state="DoorLockStatus" type="string">Unlocked</update>
                            </map>
                            <map key="0">
                                <update state="state" type="boolean">0</update>
                                <update state="switch" type="boolean">0</update>
                                <update state="DoorLockStatus" type="string">Locked</update>
                            </map>
                        </value_map>
                        <append_identifier path="//result/switches/switch" name="portID" note="portID"/>
                    </values>
                </root_object>
            </status_message>
            
            <status_message name="StateVariables">
                <constant type="character">lkfahsdoifhaiodjfoiaewjfoiawf</constant>
                <data type="character">
                    <update state="IsDoorLocked" type="string"></update>
                    <update state="DoorLockStatus" type="string"></update>
                </data>
            </status_message>
            
        </status_messages> -->
        
        
        <resource_component_actions resource_type="ENV_DOOR_LOCK_SOURCE">
            <action name="Preset1">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/status/info</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="Preset2">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/status/info</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
        </resource_component_actions>
        <resource_component_actions resource_type="ENV_ENTRY_SOURCE">
            <action name="SwitchControlOn">
                <action_argument name="switchID"/>
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/switch/ctrl?switch=</command_string>
                        <parameter_list>
                            <parameter parameter_data_type="character" action_argument="switchID"></parameter>
                            <parameter parameter_data_type="character">&amp;action=on</parameter>
                        </parameter_list>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="SwitchControlOff">
                <action_argument name="switchID"/>
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/switch/ctrl?switch=</command_string>
                        <parameter_list>
                            <parameter parameter_data_type="character" action_argument="switchID"></parameter>
                            <parameter parameter_data_type="character">&amp;action=off</parameter>
                        </parameter_list>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="Relay1ControlOn">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/ctrl?port=relay1&amp;action=on</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="Relay1ControlOff">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/ctrl?port=relay1&amp;action=off</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="Relay2ControlOn">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/ctrl?port=relay2&amp;action=on</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="Relay2ControlOff">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/ctrl?port=relay2&amp;action=off</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="Output1ControlOn">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/ctrl?port=output1&amp;action=on</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="Output1ControlOff">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/ctrl?port=output1&amp;action=off</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="Output2ControlOn">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/ctrl?port=output2&amp;action=on</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="Output2ControlOff">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/ctrl?port=output2&amp;action=off</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>

        
        </resource_component_actions>
        <resource_component_actions resource_type="ENV_DOOR_LOCK_SOURCE">
           
            <action name="UnlockDoorLock">
                <action_argument name="DoorLockAddress" note="1-4"/>
                <action_argument name="DoorLockAddress2" note="not used"/>
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/switch/ctrl?switch=</command_string>
                        <parameter_list>
                            <parameter parameter_data_type="character" action_argument="DoorLockAddress"></parameter>
                            <parameter parameter_data_type="character">&amp;action=on</parameter>
                        </parameter_list>
                        <delay ms_delay="300"/>
                    </command>
                </command_interface>
            </action>
            <action name="LockDoorLock">
                <action_argument name="DoorLockAddress" note="1-4"/>
                <action_argument name="DoorLockAddress2" note="not used"/>
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/switch/ctrl?switch=</command_string>
                        <parameter_list>
                            <parameter parameter_data_type="character" action_argument="DoorLockAddress"></parameter>
                            <parameter parameter_data_type="character">&amp;action=off</parameter>
                        </parameter_list>
                        <delay ms_delay="300"/>
                    </command>
                </command_interface>
            </action>
            <entity name="Lock" address_components="1">
                <toggle_button_representation>
                    <press_action name="UnlockDoorLock"/>
                    <toggle_action name="LockDoorLock"/>
                    <osd_press_action name="UnlockDoorLock"/>
                    <osd_hold_action name="LockDoorLock"/>
                    <toggleOnUsingState name="DoorLockStatus">
                        <unique_identifier name="switchID" address_component="1"/>
                    </toggleOnUsingState>
                </toggle_button_representation>
                <query_status_with_action name="GetSwitchStatus" period_ms="0"/>   
            </entity>
        </resource_component_actions>
        
        <custom_component_actions>
            <action name="GetDoorLockStatus">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/status</command_string>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
                <!--<execute_on_schedule period_ms="0"></execute_on_schedule>-->  <!-- to be executed right away -->
            </action>
            
            
            
            
            
            
            
            <action name="GetSwitchCaps">
                <command_interface interface="ip">
                    <command response_required="yes">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/switch/caps</command_string>
                        <response_codes>
                            <rspmessage status="success" name="SwitchCap">
                                <constant type="character">200</constant>
                                <root_object name="none" matches_required="at_least_one" format="json">
                                    <values path="/none/result/switches/enabled" matches_required="at_least_one">
                                        <update state="isSwitchEnabled" type="boolean"></update>
                                        <append_identifier path="/none/result/switches/switch" name="SwitchID" note="Switch number from 1~4"/>
                                    </values>
                                    <values path="/none/result/switches/mode" matches_required="at_least_one">
                                        <update state="SwitchMode" type="string"></update>
                                        <append_identifier path="/none/result/switches/switch" name="SwitchID" note="Switch number from 1~4"/>
                                    </values>
                                    <values path="/none/result/switches/switchOnDuration" matches_required="at_least_one">
                                        <update state="SwitchOnDuration" type="string"></update>
                                        <append_identifier path="/none/result/switches/switch" name="SwitchID" note="Switch number from 1~4"/>
                                    </values>
                                    <values path="/none/result/switches/type" matches_required="at_least_one">
                                        <update state="SwitchType" type="string"></update>
                                        <append_identifier path="/none/result/switches/switch" name="SwitchID" note="Switch number from 1~4"/>
                                    </values>
                                </root_object>
                            </rspmessage>
                        </response_codes>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            <action name="GetSwitchstatus">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/switch/status</command_string>
                        

                        <response_codes>
                            <rspmessage status="success" name="SwitchStatus">
                                <constant type="character">200</constant>
                                <root_object name="none" matches_required="at_least_one" format="json">
                                    <values path="/none/result/switches/active" matches_required="at_least_one">
                                        <update state="isSwitchActive" type="boolean"></update>
                                        <append_identifier path="/none/result/switches/switch" name="SwitchID" note="Switch number from 1~4"/>
                                    </values>
                                </root_object>
                            </rspmessage>
                        </response_codes>
                        
                        
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
                <!--<execute_on_schedule period_ms="0"></execute_on_schedule>-->  <!-- to be executed right away -->
                <execute_on_schedule period_ms="60000"></execute_on_schedule> <!-- Update every minute -->
            </action>
            
            <action name="GetIOCaps">
                <command_interface interface="ip">
                    <command response_required="yes">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/caps</command_string>
                        <response_codes>
                            <rspmessage status="success" name="IO Caps">
                                <constant type="hex">200</constant>
                                <root_object name="none" matches_required="at_least_one" format="json">
                                    <values path="/none/result/ports/type" matches_required="at_least_one">
                                        <update state="PortIO" type="string"></update>
                                        <append_identifier path="/none/result/ports/port" name="PortID" note="Port ID: relay1, relay2"/>
                                    </values>
                                </root_object>
                            </rspmessage>
                        </response_codes>
                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
            </action>
            
            <action name="GetIOStatus">
                <command_interface interface="ip">
                    <command response_required="no">
                        <http_header name="Content-Type">application/json</http_header>
                        <command_string type="character" http_request_type="GET">api/io/status</command_string>
                        

                        <response_codes>
                            <rspmessage status="success" name="IO Status">
                                <constant type="character">200</constant>
                                <root_object name="none" matches_required="at_least_one" format="json">
                                    <values path="/none/result/ports/state" matches_required="at_least_one">
                                        <update state="isPortIOState" type="integer"></update>
                                        <append_identifier path="/none/result/ports/port" name="PortID" note="Port ID: relay1, relay2"/>
                                    </values>
                                </root_object>
                            </rspmessage>
                        </response_codes>
                        

                        <delay ms_delay="200"/>
                    </command>
                </command_interface>
                <execute_on_schedule period_ms="0"></execute_on_schedule>  <!-- to be executed right away -->
                <execute_on_schedule period_ms="60000"></execute_on_schedule> <!-- Update every minute -->
            </action>
            
            
            
            
            
        </custom_component_actions>
    </logical_component>
</component>
